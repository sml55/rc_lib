"-----------------------------------------------------------------------------------------------------
"Options
"-----------------------------------------------------------------------------------------------------
syntax on       
set number "zeilennummern
set incsearch "schon bei eingabe anfangen zu suchen
filetype plugin on
filetype indent plugin on
set ruler<
set expandtab "lehrzeichen statt tabs
set tabstop =2 
set shiftwidth =2 
set hlsearch "suche hervorheben
set showmatch "anzeigen passender klammern etc
set wildmode=longest:list,full "completion on fileopening
set hidden "change buffer without saving
set smartcase "smart case insensitivity
set encoding=iso-8859-1
set cindent
set smartindent
set autoindent
set spelllang=de,en     " Mehrere Sprachen
set spellsuggest=5      " Max NN Korrekturen vorschlagen
set cryptmethod=blowfish
"set spell              " Rechtschreibprüfung für alle Dateien einschalten
au BufNewFile,BufRead *.md setlocal spell
"set foldmethod=syntax

"------------------------------------------------------------------------------------------------------
"Mappings
"------------------------------------------------------------------------------------------------------

map <right> :bn<cr>
map <left> :bp<cr>
map <up> <c-y>
map <down> <c-e>

" remap j and k to scroll by visual lines not "physical" lines
nnoremap j gj
nnoremap k gk

" better ESC
inoremap jk <Esc>
inoremap kj <Esc>

" buffer traversal
nnoremap <C-P> :bp <CR>     "previous buffer
nnoremap <C-N> :bn <CR>     "next buffer

" since C-a is my prefix for tmux, i have to remap these
nn <C-i> <C-a>

" explorer
let g:miniBufExplMapWindowNavVim = 1
let g:miniBufExplMapWindowNavArrows = 1

" taglist
nnoremap <silent> <F7> :TagbarToggle<CR> <C-j>
let g:tagbar_autofocus = 0

" nerdtree 
nnoremap <silent> <F8> :NERDTreeToggle <CR>

" Rails
nmap <F11> <Esc>:! ruby -c % 

" hard times
map <F12> :HardTimeToggle <CR>

" coworker mode
map <leader>c :Cw <CR>


autocmd FileType inc,php map <F11> :! phpqa.sh % <CR>

"-----------------------------------------------------------------------------------------------------------
"Plugin config
"-----------------------------------------------------------------------------------------------------------

"CtrlP
let g:ctrlp_map = '<c-o>' 
let g:ctrlp_working_path_mode = 2
let g:ctrlp_cache_dir = $HOME . '/.cache/ctrlp'
let g:ctrlp_custom_ignore = 'Zend|Vendor'

"continue doxygen comments
autocmd FileType c,cpp set comments-=://
autocmd FileType c,cpp set comments+=:///
autocmd FileType c,cpp set comments+=://

"hard time
let g:hardtime_default_on = 1
let g:list_of_visual_keys = [ "h", "j", "k", "l", "-", "+"]
let g:list_of_normal_keys = [ "h", "j", "k", "l", "-", "+"]



"--------------------------------------------------------------------------------------------------------
" functions
"--------------------------------------------------------------------------------------------------------

function! MdPreview()
  :! markdown % > /tmp/md_preview.html && firefox  /tmp/md_preview.html
endfunction
command MdPreview call MdPreview()

function! FoldFunctions()
  :%g /function .* {.*$/ normal! $zf%
endfunction
command Fa call FoldFunctions()


function CoworkerMode()
:unmap <right>
:unmap <left>
:HardTimeOff
endfunction
command Cw call CoworkerMode()


"--------------------------------------------------------------------------------------------------------
"Misc
"--------------------------------------------------------------------------------------------------------


" Edit another file in the same directory as the current file
" " uses expression to extract path from current file's path
" " (thanks Douglas Potts)
 if has("unix")
   map ,e :e <C-R>=expand("%:p:h") . '/'<CR>
 else
   map ,e :e <C-R>=expand("%:p:h") . '\'<CR>
 endif
 

"pastemode with simple p
:command PM set paste
:command MP set nopaste
