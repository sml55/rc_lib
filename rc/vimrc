
"
"options
"
syntax on       
set number "zeilennummern
set incsearch "schon bei eingabe anfangen zu suchen
:filetype indent plugin on
set ruler<
set expandtab "lehrzeichen statt tabs
set tabstop =2 
set shiftwidth =2 
set hlsearch "suche hervorheben
set showmatch "anzeigen passender klammern etc
set wildmode=longest:list,full "completion on fileopening
set hidden "change buffer without saving


"rechtschreibung

" Rechtschreibung Wörterbücher: ftp://ftp.vim.org/pub/vim/runtime/spell/
set spelllang=de,en     " Mehrere Sprachen
set spellsuggest=5      " Max NN Korrekturen vorschlagen
                        " Cursor auf Wort platzieren und z= eintippen 

"set spell              " Rechtschreibprüfung für alle Dateien einschalten
" oder: nur für bestimmte Dateitypen (Wir aktivieren spell nur für den lokalen
" Buffer)
au BufNewFile,BufRead *.md setlocal spell
"set foldmethod=syntax

" Make me learn the keyboard
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop> 
map <right> :bn<cr>
map <left> :bp<cr>
nnoremap j gj
nnoremap k gk


"remap escape
"inoremap jk <Esc>
"inoremap kj <Esc>


"nerdtree
"autocmd VimEnter * exe 'NERDTree' | wincmd l "autoopen

"buffer traversal
nnoremap <C-P> :bp <CR>     "previous buffer
nnoremap <C-N> :bn <CR>     "next buffer

"CtrlP
let g:ctrlp_map = '<c-o>' 
let g:ctrlp_working_path_mode = 2

"continue doxygen comments
autocmd FileType c,cpp set comments-=://
autocmd FileType c,cpp set comments+=:///
autocmd FileType c,cpp set comments+=://


"ctags
"set tags=./tags;

"
"abbreviations and commands
"
:ab #p puts "\n\n\n\n\n\n\n\n\n\n\n\n"

"pastemode with simple p
:command PM set paste
:command MP set nopaste

"""""""""""""""""""""""""""""""""""
"remaps
"""""""""""""""""""""""""""""""""""

"since C-a is my prefix for tmux, i have to remap these
nnoremap <kPlus> <C-a>
nnoremap <kMinus> <C-x>

"explorer

let g:miniBufExplMapWindowNavVim = 1
let g:miniBufExplMapWindowNavArrows = 1

" taglist
nnoremap <silent> <F7> :TagbarToggle<CR> <C-j>
let Tlist_GainFocus_on_ToggelOpen = 1 

" nerdtree 
nnoremap <silent> <F8> :NERDTreeToggle <CR>

" Rails
nmap <F11> <Esc>:! ruby -c % 
nmap <F12> <Esc>:Rake<cr>
imap <F12> <Esc>:w<cr>:Rake<cr>


" Edit another file in the same directory as the current file
" " uses expression to extract path from current file's path
" " (thanks Douglas Potts)
 if has("unix")
   map ,e :e <C-R>=expand("%:p:h") . '/'<CR>
 else
   map ,e :e <C-R>=expand("%:p:h") . '\'<CR>
 endif


" functions
"
"
function! MdPreview()
  :! markdown % > /tmp/md_preview.html && firefox  /tmp/md_preview.html
endfunction
command MdPreview call MdPreview()

set cryptmethod=blowfish


set cryptmethod=blowfish
