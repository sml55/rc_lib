
"
"options
"
syntax on       
set number "zeilennummern
set incsearch "schon bei eingabe anfangen zu suchen
:filetype indent plugin on
set ruler<
set expandtab "lehrzeichen statt tabs
set tabstop =4 
set shiftwidth =4 
set hlsearch "suche hervorheben
set showmatch "anzeigen passender klammern etc
set wildmode=longest:list,full "completion on fileopening
set hidden "change buffer without saving

" Make me learn the keyboard
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop> 
nnoremap j gj
nnoremap k gk
"taglist
let Tlist_WinWidth = 45 "breite
let Tlist_Exit_OnlyWindow = 1 "vim beenden wenn taglist letztes fenster
let Tlist_Use_Right_Window = 1 "taglist auf rechter seite
let Tlist_Sort_Type = "name" "nach namen sortieren
"let Tlist_Auto_Open = 1

"nerdtree
"autocmd VimEnter * exe 'NERDTree' | wincmd l "autoopen

"phpdoc 

inoremap <C-P> <ESC>:call PhpDocSingle()<CR>i
nnoremap <C-P> :call PhpDocSingle()<CR>
vnoremap <C-P> :call PhpDocRange()<CR> 

"CtrlP
let g:ctrlp_map = '<c-o>' 
let g:ctrlp_working_path_mode = 2


"
"abbreviations and commands
"
:ab #p puts "\n\n\n\n\n\n\n\n\n\n\n\n"
"pastemode with simple p
:command PM set paste
:command MP set nopaste

"""""""""""""""""""""""""""""""""""
"remaps
"""""""""""""""""""""""""""""""""""

"explorer

let g:miniBufExplMapWindowNavVim = 1
let g:miniBufExplMapWindowNavArrows = 1

" taglist
nnoremap <silent> <F7> :TlistToggle<CR>

" nerdtree 
nnoremap <silent> <F8> :NERDTreeToggle <CR>

" folding
:map <F5> <Esc>zf/end<cr>
:map <F6> <Esc>zo

" Rails
nmap <F11> <Esc>:! ruby -c % 
nmap <F12> <Esc>:Rake<cr>
imap <F12> <Esc>:w<cr>:Rake<cr>


" Edit another file in the same directory as the current file
" " uses expression to extract path from current file's path
" " (thanks Douglas Potts)
 if has("unix")
   map ,e :e <C-R>=expand("%:p:h") . '/'<CR>
 else
   map ,e :e <C-R>=expand("%:p:h") . '\'<CR>
 endif

"moving in buffers"
map <C-h> :bp <CR>
map <C-l> :bn <CR> 

